(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-6ac346ae"],{"173d":function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvUmVnaXN0ZXJQYWdlLnZ1ZT84NmI5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjE3M2QuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///173d\n")},"21d8":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var _node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_RegisterPage_vue_vue_type_style_index_0_id_60fc2ee6_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("173d");\n/* harmony import */ var _node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_RegisterPage_vue_vue_type_style_index_0_id_60fc2ee6_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_RegisterPage_vue_vue_type_style_index_0_id_60fc2ee6_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__);\n/* unused harmony reexport * */\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvUmVnaXN0ZXJQYWdlLnZ1ZT9lZjAxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQSIsImZpbGUiOiIyMWQ4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvbG9hZGVyLmpzPz9yZWYtLTgtb25lT2YtMS0wIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTgtb25lT2YtMS0xIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0yIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS04LW9uZU9mLTEtMyEuLi8uLi9ub2RlX21vZHVsZXMvY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL1JlZ2lzdGVyUGFnZS52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD02MGZjMmVlNiZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///21d8\n')},eaff:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"771c0298-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/pages/RegisterPage.vue?vue&type=template&id=60fc2ee6&scoped=true&\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"container"},[_c(\'h1\',{staticClass:"title"},[_vm._v("Register")]),_c(\'b-form\',{on:{"submit":function($event){$event.preventDefault();return _vm.onRegister.apply(null, arguments)},"reset":function($event){$event.preventDefault();return _vm.onReset.apply(null, arguments)}}},[_c(\'b-form-group\',{attrs:{"id":"input-group-username","label-cols-sm":"3","label":"Username:","label-for":"username"}},[_c(\'b-form-input\',{attrs:{"id":"username","type":"text","state":_vm.validateState(\'username\')},model:{value:(_vm.$v.form.username.$model),callback:function ($$v) {_vm.$set(_vm.$v.form.username, "$model", $$v)},expression:"$v.form.username.$model"}}),(!_vm.$v.form.username.required)?_c(\'b-form-invalid-feedback\',[_vm._v(" Username is required ")]):(!_vm.$v.form.username.length)?_c(\'b-form-invalid-feedback\',[_vm._v(" Username length should be between 3-8 characters long ")]):_vm._e(),(!_vm.$v.form.username.alpha)?_c(\'b-form-invalid-feedback\',[_vm._v(" Username alpha ")]):_vm._e()],1),_c(\'b-form-group\',{attrs:{"id":"input-group-firstName","label-cols-sm":"3","label":"First name:","label-for":"firstName"}},[_c(\'b-form-input\',{attrs:{"id":"firstName","type":"text","state":_vm.validateState(\'firstName\')},model:{value:(_vm.$v.form.firstName.$model),callback:function ($$v) {_vm.$set(_vm.$v.form.firstName, "$model", $$v)},expression:"$v.form.firstName.$model"}}),(!_vm.$v.form.firstName.required)?_c(\'b-form-invalid-feedback\',[_vm._v(" Firstname is required ")]):_vm._e(),(!_vm.$v.form.firstName.alpha)?_c(\'b-form-invalid-feedback\',[_vm._v(" Firstname alpha ")]):_vm._e()],1),_c(\'b-form-group\',{attrs:{"id":"input-group-lastName","label-cols-sm":"3","label":"Last name:","label-for":"lastName"}},[_c(\'b-form-input\',{attrs:{"id":"lastName","type":"text","state":_vm.validateState(\'lastName\')},model:{value:(_vm.$v.form.lastName.$model),callback:function ($$v) {_vm.$set(_vm.$v.form.lastName, "$model", $$v)},expression:"$v.form.lastName.$model"}}),(!_vm.$v.form.lastName.required)?_c(\'b-form-invalid-feedback\',[_vm._v(" Last name is required ")]):_vm._e(),(!_vm.$v.form.lastName.alpha)?_c(\'b-form-invalid-feedback\',[_vm._v(" Last name alpha ")]):_vm._e()],1),_c(\'b-form-group\',{attrs:{"id":"input-group-country","label-cols-sm":"3","label":"Country:","label-for":"country"}},[_c(\'b-form-select\',{attrs:{"id":"country","options":_vm.countries,"state":_vm.validateState(\'country\')},model:{value:(_vm.$v.form.country.$model),callback:function ($$v) {_vm.$set(_vm.$v.form.country, "$model", $$v)},expression:"$v.form.country.$model"}}),_c(\'b-form-invalid-feedback\',[_vm._v(" Country is required ")])],1),_c(\'b-form-group\',{attrs:{"id":"input-group-Password","label-cols-sm":"3","label":"Password:","label-for":"password"}},[_c(\'b-form-input\',{attrs:{"id":"password","type":"password","state":_vm.validateState(\'password\')},model:{value:(_vm.$v.form.password.$model),callback:function ($$v) {_vm.$set(_vm.$v.form.password, "$model", $$v)},expression:"$v.form.password.$model"}}),(!_vm.$v.form.password.required)?_c(\'b-form-invalid-feedback\',[_vm._v(" Password is required ")]):(_vm.$v.form.password.$error)?_c(\'b-form-text\',{attrs:{"text-variant":"info"}},[_vm._v(" Your password should be "),_c(\'strong\',[_vm._v("strong")]),_vm._v(". "),_c(\'br\'),_vm._v(" For that, your password should be also: ")]):_vm._e(),(_vm.$v.form.password.required && !_vm.$v.form.password.length)?_c(\'b-form-invalid-feedback\',[_vm._v(" Have length between 5-10 characters long ")]):_vm._e(),(!_vm.$v.form.password.valid)?_c(\'b-form-invalid-feedback\',[_vm._v(" need at least one number and one special letter ")]):_vm._e()],1),_c(\'b-form-group\',{attrs:{"id":"input-group-confirmedPassword","label-cols-sm":"3","label":"Confirm Password:","label-for":"confirmedPassword"}},[_c(\'b-form-input\',{attrs:{"id":"confirmedPassword","type":"password","state":_vm.validateState(\'confirmedPassword\')},model:{value:(_vm.$v.form.confirmedPassword.$model),callback:function ($$v) {_vm.$set(_vm.$v.form.confirmedPassword, "$model", $$v)},expression:"$v.form.confirmedPassword.$model"}}),(!_vm.$v.form.confirmedPassword.required)?_c(\'b-form-invalid-feedback\',[_vm._v(" Password confirmation is required ")]):(!_vm.$v.form.confirmedPassword.sameAsPassword)?_c(\'b-form-invalid-feedback\',[_vm._v(" The confirmed password is not equal to the original password ")]):_vm._e()],1),_c(\'b-form-group\',{attrs:{"id":"input-group-email","label-cols-sm":"3","label":"Email:","label-for":"email"}},[_c(\'b-form-input\',{attrs:{"id":"email","type":"text","state":_vm.validateState(\'email\')},model:{value:(_vm.$v.form.email.$model),callback:function ($$v) {_vm.$set(_vm.$v.form.email, "$model", $$v)},expression:"$v.form.email.$model"}}),(!_vm.$v.form.email.required)?_c(\'b-form-invalid-feedback\',[_vm._v(" email is required ")]):_vm._e(),(!_vm.$v.form.email.email)?_c(\'b-form-invalid-feedback\',[_vm._v(" Not valid email address ")]):_vm._e()],1),_c(\'b-button\',{attrs:{"type":"reset","variant":"danger"}},[_vm._v("Reset")]),_c(\'b-button\',{staticClass:"ml-5 w-75",staticStyle:{"width":"250px"},attrs:{"type":"submit","variant":"primary"}},[_vm._v("Register ")]),_c(\'div\',{staticClass:"mt-2"},[_vm._v(" You have an account already? "),_c(\'router-link\',{attrs:{"to":"login"}},[_vm._v(" Log in here")])],1)],1),(_vm.form.submitError)?_c(\'b-alert\',{staticClass:"mt-2",attrs:{"variant":"warning","dismissible":"","show":""}},[_vm._v(" Register failed: "+_vm._s(_vm.form.submitError)+" ")]):_vm._e()],1)}\nvar staticRenderFns = []\n\n\n// CONCATENATED MODULE: ./src/pages/RegisterPage.vue?vue&type=template&id=60fc2ee6&scoped=true&\n\n// CONCATENATED MODULE: ./src/assets/countries.js\n/* harmony default export */ var countries = (["Afghanistan", "Ã…land Islands", "Albania", "Algeria", "American Samoa", "Andorra", "Angola", "Anguilla", "Antarctica", "Antigua and Barbuda", "Argentina", "Armenia", "Aruba", "Australia", "Austria", "Azerbaijan", "Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belarus", "Belgium", "Belize", "Benin", "Bermuda", "Bhutan", "Bolivia (Plurinational State of)", "Bonaire, Sint Eustatius and Saba", "Bosnia and Herzegovina", "Botswana", "Bouvet Island", "Brazil", "British Indian Ocean Territory", "United States Minor Outlying Islands", "Virgin Islands (British)", "Virgin Islands (U.S.)", "Brunei Darussalam", "Bulgaria", "Burkina Faso", "Burundi", "Cambodia", "Cameroon", "Canada", "Cabo Verde", "Cayman Islands", "Central African Republic", "Chad", "Chile", "China", "Christmas Island", "Cocos (Keeling) Islands", "Colombia", "Comoros", "Congo", "Congo (Democratic Republic of the)", "Cook Islands", "Costa Rica", "Croatia", "Cuba", "CuraÃ§ao", "Cyprus", "Czech Republic", "Denmark", "Djibouti", "Dominica", "Dominican Republic", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Ethiopia", "Falkland Islands (Malvinas)", "Faroe Islands", "Fiji", "Finland", "France", "French Guiana", "French Polynesia", "French Southern Territories", "Gabon", "Gambia", "Georgia", "Germany", "Ghana", "Gibraltar", "Greece", "Greenland", "Grenada", "Guadeloupe", "Guam", "Guatemala", "Guernsey", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Heard Island and McDonald Islands", "Holy See", "Honduras", "Hong Kong", "Hungary", "Iceland", "India", "Indonesia", "CÃ´te d\'Ivoire", "Iran (Islamic Republic of)", "Iraq", "Ireland", "Isle of Man", "Israel", "Italy", "Jamaica", "Japan", "Jersey", "Jordan", "Kazakhstan", "Kenya", "Kiribati", "Kuwait", "Kyrgyzstan", "Lao People\'s Democratic Republic", "Latvia", "Lebanon", "Lesotho", "Liberia", "Libya", "Liechtenstein", "Lithuania", "Luxembourg", "Macao", "Macedonia (the former Yugoslav Republic of)", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Martinique", "Mauritania", "Mauritius", "Mayotte", "Mexico", "Micronesia (Federated States of)", "Moldova (Republic of)", "Monaco", "Mongolia", "Montenegro", "Montserrat", "Morocco", "Mozambique", "Myanmar", "Namibia", "Nauru", "Nepal", "Netherlands", "New Caledonia", "New Zealand", "Nicaragua", "Niger", "Nigeria", "Niue", "Norfolk Island", "Korea (Democratic People\'s Republic of)", "Northern Mariana Islands", "Norway", "Oman", "Pakistan", "Palau", "Palestine, State of", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Pitcairn", "Poland", "Portugal", "Puerto Rico", "Qatar", "Republic of Kosovo", "RÃ©union", "Romania", "Russian Federation", "Rwanda", "Saint BarthÃ©lemy", "Saint Helena, Ascension and Tristan da Cunha", "Saint Kitts and Nevis", "Saint Lucia", "Saint Martin (French part)", "Saint Pierre and Miquelon", "Saint Vincent and the Grenadines", "Samoa", "San Marino", "Sao Tome and Principe", "Saudi Arabia", "Senegal", "Serbia", "Seychelles", "Sierra Leone", "Singapore", "Sint Maarten (Dutch part)", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "South Africa", "South Georgia and the South Sandwich Islands", "Korea (Republic of)", "South Sudan", "Spain", "Sri Lanka", "Sudan", "Suriname", "Svalbard and Jan Mayen", "Swaziland", "Sweden", "Switzerland", "Syrian Arab Republic", "Taiwan", "Tajikistan", "Tanzania, United Republic of", "Thailand", "Timor-Leste", "Togo", "Tokelau", "Tonga", "Trinidad and Tobago", "Tunisia", "Turkey", "Turkmenistan", "Turks and Caicos Islands", "Tuvalu", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom of Great Britain and Northern Ireland", "United States of America", "Uruguay", "Uzbekistan", "Vanuatu", "Venezuela (Bolivarian Republic of)", "Viet Nam", "Wallis and Futuna", "Western Sahara", "Yemen", "Zambia", "Zimbabwe"]);\n// EXTERNAL MODULE: ./node_modules/vuelidate/lib/validators/index.js\nvar validators = __webpack_require__("b5ae");\n\n// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/pages/RegisterPage.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ var RegisterPagevue_type_script_lang_js_ = ({\n  name: "Register",\n\n  data() {\n    return {\n      form: {\n        username: "",\n        firstName: "",\n        lastName: "",\n        country: null,\n        password: "",\n        confirmedPassword: "",\n        email: "",\n        submitError: undefined\n      },\n      countries: [{\n        value: null,\n        text: "",\n        disabled: true\n      }],\n      errors: [],\n      validated: false\n    };\n  },\n\n  validations: {\n    form: {\n      username: {\n        required: validators["required"],\n        length: u => Object(validators["minLength"])(3)(u) && Object(validators["maxLength"])(8)(u),\n        alpha: validators["alpha"]\n      },\n      firstName: {\n        required: validators["required"],\n        length: u => Object(validators["minLength"])(1)(u),\n        alpha: validators["alpha"]\n      },\n      lastName: {\n        required: validators["required"],\n        length: u => Object(validators["minLength"])(1)(u),\n        alpha: validators["alpha"]\n      },\n      country: {\n        required: validators["required"]\n      },\n      password: {\n        required: validators["required"],\n        valid: function (value) {\n          const containsNumber = /[0-9]/.test(value);\n          const containsSpecial = /[#?!@$%^&*-]/.test(value);\n          return containsNumber && containsSpecial;\n        },\n        length: p => Object(validators["minLength"])(5)(p) && Object(validators["maxLength"])(10)(p)\n      },\n      confirmedPassword: {\n        required: validators["required"],\n        sameAsPassword: Object(validators["sameAs"])("password")\n      },\n      email: {\n        required: validators["required"],\n        email: validators["email"]\n      }\n    }\n  },\n\n  mounted() {\n    this.countries.push(...countries);\n  },\n\n  methods: {\n    validateState(param) {\n      const {\n        $dirty,\n        $error\n      } = this.$v.form[param];\n      return $dirty ? !$error : null;\n    },\n\n    async Register() {\n      try {\n        const response = await this.axios.post("Register", {\n          userName: this.form.username,\n          firstName: this.form.firstName,\n          lastName: this.form.lastName,\n          country: this.form.country,\n          password: this.form.password,\n          email: this.form.email\n        });\n        this.$router.push("login");\n      } catch (err) {\n        console.log(err.response);\n        this.form.submitError = err.response.data.message;\n      }\n    },\n\n    onRegister() {\n      this.$v.form.$touch();\n\n      if (this.$v.form.$anyError) {\n        return;\n      }\n\n      this.Register();\n    },\n\n    onReset() {\n      this.form = {\n        username: "",\n        firstName: "",\n        lastName: "",\n        country: null,\n        password: "",\n        confirmedPassword: "",\n        email: ""\n      };\n      this.$nextTick(() => {\n        this.$v.$reset();\n      });\n    }\n\n  }\n});\n// CONCATENATED MODULE: ./src/pages/RegisterPage.vue?vue&type=script&lang=js&\n /* harmony default export */ var pages_RegisterPagevue_type_script_lang_js_ = (RegisterPagevue_type_script_lang_js_); \n// EXTERNAL MODULE: ./src/pages/RegisterPage.vue?vue&type=style&index=0&id=60fc2ee6&lang=scss&scoped=true&\nvar RegisterPagevue_type_style_index_0_id_60fc2ee6_lang_scss_scoped_true_ = __webpack_require__("21d8");\n\n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__("2877");\n\n// CONCATENATED MODULE: ./src/pages/RegisterPage.vue\n\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(componentNormalizer["a" /* default */])(\n  pages_RegisterPagevue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  "60fc2ee6",\n  null\n  \n)\n\n/* harmony default export */ var RegisterPage = __webpack_exports__["default"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///eaff\n')}}]);